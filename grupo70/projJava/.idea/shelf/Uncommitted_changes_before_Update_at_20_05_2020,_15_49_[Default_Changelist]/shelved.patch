Index: src/Apresentacao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Arrays;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Scanner;\n\npublic class Apresentacao implements IApresentacao{\n\n    public void welcome() {\n        System.out.print(\"   SSSSSSSSSSSSSSS           GGGGGGGGGGGG   VVVVVVVV           VVVVVVVV\\n\");\n        System.out.print(\" SS:::::::::::::::S       GGG::::::::::::G  V::::::V           V::::::V\\n\");\n        System.out.print(\"S:::::SSSSSS::::::S     GG:::::::::::::::G  V::::::V           V::::::V\\n\");\n        System.out.print(\"S:::::S     SSSSSSS    G:::::GGGGGGGG::::G  V::::::V           V::::::V\\n\");\n        System.out.print(\"S:::::S               G:::::G       GGGGGG   V:::::V           V:::::V \\n\");\n        System.out.print(\"S:::::S              G:::::G                  V:::::V         V:::::V  \\n\");\n        System.out.print(\" S::::SSSS           G:::::G                   V:::::V       V:::::V   \\n\");\n        System.out.print(\"  SS::::::SSSSS      G:::::G    GGGGGGGGGG      V:::::V     V:::::V    \\n\");\n        System.out.print(\"    SSS::::::::SS    G:::::G    G::::::::G       V:::::V   V:::::V     \\n\");\n        System.out.print(\"       SSSSSS::::S   G:::::G    GGGGG::::G        V:::::V V:::::V      \\n\");\n        System.out.print(\"            S:::::S  G:::::G        G::::G         V:::::V:::::V       \\n\");\n        System.out.print(\"            S:::::S   G:::::G       G::::G          V:::::::::V        \\n\");\n        System.out.print(\"SSSSSSS     S:::::S    G:::::GGGGGGGG::::G           V:::::::V         \\n\");\n        System.out.print(\"S::::::SSSSSS:::::S     GG:::::::::::::::G            V:::::V          \\n\");\n        System.out.print(\"S:::::::::::::::SS        GGG::::::::::::G             V:::V           \\n\");\n        System.out.print(\" SSSSSSSSSSSSSSS             GGGGGGGGGGGG               VVV            \\n\");\n        System.out.print(\"\\nBem Vindo ao Sistema de Gestão de Vendas. Durante a execução do programa\\n\");\n        System.out.print(\"pode executar qualquer dos comandos do menu, tendo em atenção que os dados\\n\");\n        System.out.print(\"têm de ser carregados antes das consultas.\\n\");\n        System.out.print(\"Pressione qualquer tecla para continuar!\\n\");\n    }\n\n    public void clearScreen() {\n        for (int i = 0; i < 3; ++i)\n            System.out.println();\n    }\n\n    public void menu(){\n        System.out.print(\"INÍCIO\\n\" +\n                \"1 | Consultas estatisticas\\n\" +\n                \"2 | Consultas iterativas\\n\" +\n                \"3 | Gravar estado\\n\" +\n                \"4 | Carregar estado a partir de um ficheiro\\n\" +\n                \"5 | Carregar dados a partir do ficheiro vendas_1M.txt\\n\" +\n                \"0 | Sair\\n\");\n    }\n\n    public void menuConsultasInterativas(){\n        System.out.print(\"CONSULTAS INTERATIVAS\\n\" +\n                \"1 | Códigos Produtos nunca comprados e total\\n\" +\n                \"2 | Total vendas e clientes distintos para cada filial e para um dado mês\\n\" +\n                \"3 | Número compras, produtos distintos e gasto total de um dado cliente para cada mês\\n\" +\n                \"4 | Número compras, clientes distintos e faturação total de um dado produto para cada mês\\n\"+\n                \"5 | Lista produtos que um cliente mais comprou(quantidade)\\n\"+\n                \"6 | X produtos mais vendidos em todo o ano(unidades) e clientes distintos que os compraram\\n\" +\n                \"7 | 3 maiores compradores em termos de faturação por filial\\n\" +\n                \"8 | X clientes que compraram mais produtos diferentes\\n\" +\n                \"9 | X clientes que mais compraram um produto e valor gasto para cada um\\n\" +\n                \"10| Faturação total de cada produto mês a mês e filial a filial\\n\" +\n                \"0 | Sair\\n\");\n    }\n\n    public void menuConsultasEstatisticas(){\n        System.out.print(\"CONSULTAS ESTATÍSTICAS\\n\" +\n                \"1 | Dados relativos ao último ficheiro de vendas lido\\n\" +\n                \"2 | Total compras por mês\\n\" +\n                \"3 | Facturação total e por (Filial/Mês)\\n\" +\n                \"4 | Clientes compradores distintos por (Filial/Mês)\\n\" +\n                \"0 | Sair\\n\");\n    }\n\n    private void printPagina(List<ParStringFloat> list, int page, int max, int maxpage) {\n        int i, j;\n        int size = list.size();\n\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n        System.out.println(\"                                       Página (\" + (page+1) + \"/\" +(maxpage+1) +\")\");\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n\n        for(i=max*page; i<(max*(page+1)) && i<size; i+=6) {\n            for(j=i; (j<i+5) && (j<size-1); j++)\n                System.out.print(list.get(j).toString() + \"  |  \");\n            System.out.println(list.get(j).toString());\n        }\n\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n        System.out.println(\"      [N] Next Page | [P] Previous Page | [F] First Page | [L] Last Page | [Q] Quit        \");\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n    }\n\n    private void printArray(List<ParStringFloat> list, int max) {\n        int page = 0, maxpage = (list.size()-1)/max;\n        Scanner s = new Scanner(System.in);\n        String line;\n        boolean r=true;\n\n        while(r) {\n            printPagina(list, page, max, maxpage);\n\n            line = s.nextLine();\n\n            if(line.equals(\"N\") && page<maxpage)\n                page++;\n\n            else if(line.equals(\"P\") && page>0)\n                page--;\n\n            else if(line.equals(\"F\"))\n                page = 0;\n\n            else if(line.equals(\"L\"))\n                page = maxpage;\n\n            else if(line.equals(\"Q\"))\n                r=false;\n        }\n    }\n\n\n    public void printMessage(String message) {\n        System.out.println(message);\n    }\n\n    public void printErroLerInt(){\n        System.out.println(\"Erro a ler int!\");\n    }\n\n    public void printErroCarregar(){\n        System.out.println(\"Carregue as estruturas primeiro!\");\n    }\n\n    public void printErroLerFicheiro(int i){\n        if(i == 1)\n            System.out.println(\"Erro a ler ficheiro!\");\n        else\n            System.out.println(\"Ficheiro não encontrado!\");\n    }\n\n    public void printTime(String time,String type){\n        System.out.println(\"Tempo carregamento \" + type + \":\" +time);\n    }\n\n    public String pedirCliente(){\n        return \"Introduza um cliente:\";\n    }\n\n    public String pedirProduto(){\n        return \"Introduza um produto:\";\n    }\n\n    public String pedirMes(){\n        return \"Introduza um mês:\";\n    }\n\n    public String pedirLimite(){\n        return \"Introduza um limite:\";\n    }\n\n    public String pedirNumero(){\n        return \"Introduza um número:\";\n    }\n\n    public void printConsultasEstatisticas(ConsultasEstatisticas ce, int i) {\n        final StringBuilder sb = new StringBuilder();\n\n        switch (i) {\n            case 1:\n                sb.append(\"Informações sobre ficheiro de vendas lido\\n\");\n                sb.append(\"Ficheiro vendas lido:\").append(ce.getSalesPath());\n                sb.append(\"\\nVendas Inválidas:\").append(ce.getVendasInvalidas());\n                sb.append(\"\\nTotal produtos:\").append(ce.getTotalProdutos());\n                sb.append(\"\\nNúmero prodtutos comprados:\").append(ce.getProdsComprados());\n                sb.append(\"\\nNúmero prodtutos nunca Comprados:\").append(ce.getProdsNaoComprados());\n                sb.append(\"\\nTotal clientes:\").append(ce.getTotalClientes());\n                sb.append(\"\\nNúmero clientes compradores:\").append(ce.getCliCompradores());\n                sb.append(\"\\nNúmero clientes não compradores:\").append(ce.getCliNaoCompradores());\n                sb.append(\"\\nCompras com valor 0:\").append(ce.getComprasValor0());\n                sb.append(\"\\nFacturação total:\").append(ce.getFatTotal());\n                System.out.println(sb.toString());\n                break;\n            case 2:\n                sb.append(\"Número de compras efetuadas em cada mês\\n\");\n                int [] comprasmes = ce.getComprasMes();\n                for(int j = 0;j < 12;j++)\n                    sb.append(\"\\nMes \").append(j+1).append(\":\").append(comprasmes[i]);\n                break;\n            case 3:\n                System.out.println(\"Facturação (Filial/Mês)\");\n                System.out.println(String.format(\"%5s %8s %8s %10s %8s %10s %8s %10s\", \"Filial\" , \"|\", \"1\", \"|\", \"2\",\"|\", \"3\",\"|\"));\n                printTabela(ce.getFatMesFil());\n                break;\n            case 4:\n                System.out.println(\"Clientes compradores (Filial/Mês)\");\n                System.out.println(String.format(\"%5s %8s %8s %7s %8s %7s %8s %7s\", \"Filial\" , \"|\", \"1\", \"|\", \"2\",\"|\", \"3\",\"|\"));\n                printTabela(ce.getCompradoresMesFil());\n                break;\n        }\n        clearScreen();\n\n        System.out.println(sb.toString());\n    }\n\n    public void printStringList(List<String> list){\n        StringBuilder sb = new StringBuilder();\n        int size = list.size(),i,c;\n        for(i = 0,c = 0;i < size;i++,c++) {\n            if (c == 2) {\n                sb.append(list.get(i)).append(\"\\n\");\n                c = 0;\n            } else\n                sb.append(list.get(i)).append(\"  \");\n        }\n        System.out.println(sb.append(\"\\n\").toString());\n    }\n\n    public void printQ1(List<String> list) {\n        System.out.println(\"Produtos não comprados:\\n\");\n        printStringList(list);\n    }\n\n    public void printQ2(int [] array) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Vendas e clientes distintos que as fizeram para o mês dado\\n\\n\");\n        sb.append(\"Total vendas no mês dado \").append(\":\").append(array[0]);\n        sb.append(\"Clientes distintos no mês dado \").append(\":\").append(array[1]);\n        for(int i = 2;i < 8;i+=2) {\n            sb.append(\"Total vendas filial \").append(i/2).append(\":\").append(array[i]);\n            sb.append(\"Clientes distintos filial \").append(i/2).append(\":\").append(array[i + 1]);\n        }\n    }\n\n    public void printQ3(Map<Integer,float[]> querie3) {\n        float [][] res = new float[12][3];\n        for(int mes = 0;mes < 12;mes++)\n            res[mes] = querie3.get(mes);\n        System.out.println(String.format(\"%5s %8s %8s %7s %8s %7s %8s %7s\", \"Mês\" , \"|\", \"Compras\", \"|\", \"Produtos\",\"|\", \"Gasto\",\"|\"));\n        printTabela(res);\n    }\n\n    public void printQ4(Map<Integer,float[]> querie4) {\n        float [][] res = new float[12][3];\n        for(int mes = 0;mes < 12;mes++)\n            res[mes] = querie4.get(mes);\n        System.out.println(String.format(\"%5s %8s %8s %7s %8s %7s %8s %7s\", \"Mês\" , \"|\", \"Vendas\", \"|\", \"Clientes\",\"|\", \"Faturação\",\"|\"));\n        printTabela(res);\n    }\n\n    public void printQ7(Map<Integer,List<String>> list) {\n        System.out.println(\"3 Maiores compradores por filial\\n\\n\");\n        System.out.println(String.format(\"%5s %5s %8s %7s %8s %7s %8s %7s\", \"Filial\" , \"|\", \"1º\", \"|\", \"2º\",\"|\", \"3º\",\"|\"));\n        System.out.println(String.format(\"%s\", \"---------------------------------------------------------------\"));\n        for(int i = 0;i < 3;i++) {\n            System.out.println(String.format(\"%5d %5s %10s %5s %10s %5s %10s %5s\", i+1 ,  \"|\", list.get(i).get(0),\n                                                                                            \"|\",list.get(i).get(1), \"|\",list.get(i).get(2),\"|\"));\n            //System.out.println(\"3 Maiores compradores filial \"+i + 1+\":\");\n            //printStringList(list.get(i));\n        }\n    }\n\n    public void printTabela(float[][] table){\n        int mes = 1;\n        System.out.println(String.format(\"%s\", \"--------------------------------------------------------------------------\"));\n        for (final float[] row : table) {\n            System.out.println(String.format(\"%5s %2d %5s %10.2f %5s %10.2f %5s %10.2f %5s\", \"Mes \",  mes, \"|\", row[0], \"|\",row[1], \"|\",row[2],\"|\"));\n            mes++;\n        }\n    }\n\n    public void printQ10(Map<String,float[][]> querie10){\n        for(Map.Entry<String, float[][]> cod:querie10.entrySet()) {\n            System.out.println(\"Faturação produto \"+cod.getKey()+\"\\n\");\n            if (cod.getValue() != null){\n                System.out.println(String.format(\"%5s %8s %8s %10s %8s %10s %8s %10s\", \"Filial\" , \"|\", \"1\", \"|\", \"2\",\"|\", \"3\",\"|\"));\n                printTabela(cod.getValue());\n            }\n            else\n                System.out.println(\"Produto não vendido\\n\");\n        }\n    }\n\n    public void printConsultasIterativas(ConsultasInterativas ci, int i,String time) {\n        final StringBuilder sb = new StringBuilder(\"ConsultasEstatisticas\\n\");\n\n        switch (i) {\n            case 1:\n                printQ1(ci.getQ1());\n                break;\n            case 2:\n                printQ2(ci.getQ2());\n                break;\n            case 3:\n                printQ3(ci.getQ3());\n                break;\n            case 4:\n                printQ4(ci.getQ4());\n                break;\n            case 5:\n                printArray(ci.getQ5(), 100);\n                break;\n            case 6:\n                printArray(ci.getQ6(), 100);\n                break;\n            case 7:\n                printQ7(ci.getQ7());\n                break;\n            case 8:\n                printArray(ci.getQ8(), 100);\n                break;\n            case 9:\n                printArray(ci.getQ9(), 100);\n                break;\n            case 10:\n                printQ10(ci.getQ10());\n                break;\n        }\n\n        printTime(time, \"Querie \" + i);\n    }\n\n    /*\n    public void printQ1(ConsultasInterativas ci, String time) {\n        System.out.println(ci.toStringQ1()+\"\\nTempo querie 1:\" + time);\n    }\n\n    public void printQ2(ConsultasInterativas ci, String time, int num) {\n        System.out.println(ci.toStringQ2(num)+\"\\nTempo querie 2:\" + time);\n    }\n\n    public void printQ3(ConsultasInterativas ci, String time) {\n        System.out.println(ci.toStringQ3()+\"\\nTempo querie 3:\" + time);\n    }\n\n    public void printQ4(ConsultasInterativas ci, String time) {\n        System.out.println(ci.toStringQ4()+\"\\nTempo querie 4:\" + time);\n    }\n\n    public void printQ5(ConsultasInterativas ci, String time) {\n        System.out.println(ci.toStringQ5()+\"\\nTempo querie 5:\" + time);\n    }\n\n    public void printQ6(ConsultasInterativas ci, String time, int num) {\n        System.out.println(ci.toStringQ6(num)+\"\\nTempo querie 6:\" + time);\n    }\n\n    public void printQ7(ConsultasInterativas ci, String time) {\n        System.out.println(ci.toStringQ7()+\"\\nTempo querie 7:\" + time);\n    }\n\n    public void printQ8(ConsultasInterativas ci, String time, int num) {\n        System.out.println(ci.toStringQ8(num)+\"\\nTempo querie 8:\" + time);\n    }\n\n    public void printQ9(ConsultasInterativas ci, String time, int num, String line) {\n        System.out.println(ci.toStringQ9(num, line)+\"\\nTempo querie 9:\" + time);\n    }\n\n    public void printQ10(ConsultasInterativas ci, String time) {\n        System.out.println(ci.toStringQ10()+\"\\nTempo querie 10:\" + time);\n    }\n*/\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Apresentacao.java	(revision de534e2107c77dd862c1a16dc2ae515f1396b30e)
+++ src/Apresentacao.java	(date 1589985527000)
@@ -34,86 +34,53 @@
     }
 
     public void menu(){
-        System.out.print("INÍCIO\n" +
-                "1 | Consultas estatisticas\n" +
-                "2 | Consultas iterativas\n" +
-                "3 | Gravar estado\n" +
-                "4 | Carregar estado a partir de um ficheiro\n" +
-                "5 | Carregar dados a partir do ficheiro vendas_1M.txt\n" +
-                "0 | Sair\n");
+        StringBuilder sb = new StringBuilder();
+        sb.append("\n-----------------------------------------------------\n");
+        sb.append("                       INÍCIO\n");
+        sb.append("-----------------------------------------------------\n");
+        sb.append("1 | Consultas estatisticas\n");
+        sb.append("2 | Consultas iterativas\n");
+        sb.append("3 | Gravar estado\n");
+        sb.append("4 | Carregar estado a partir de um ficheiro\n");
+        sb.append("5 | Carregar dados a partir do ficheiro vendas_1M.txt\n");
+        sb.append("0 | Sair\n");
+        sb.append("-----------------------------------------------------\n");
+        System.out.print(sb.toString());
     }
 
     public void menuConsultasInterativas(){
-        System.out.print("CONSULTAS INTERATIVAS\n" +
-                "1 | Códigos Produtos nunca comprados e total\n" +
-                "2 | Total vendas e clientes distintos para cada filial e para um dado mês\n" +
-                "3 | Número compras, produtos distintos e gasto total de um dado cliente para cada mês\n" +
-                "4 | Número compras, clientes distintos e faturação total de um dado produto para cada mês\n"+
-                "5 | Lista produtos que um cliente mais comprou(quantidade)\n"+
-                "6 | X produtos mais vendidos em todo o ano(unidades) e clientes distintos que os compraram\n" +
-                "7 | 3 maiores compradores em termos de faturação por filial\n" +
-                "8 | X clientes que compraram mais produtos diferentes\n" +
-                "9 | X clientes que mais compraram um produto e valor gasto para cada um\n" +
-                "10| Faturação total de cada produto mês a mês e filial a filial\n" +
-                "0 | Sair\n");
+        StringBuilder sb = new StringBuilder();
+        sb.append("\n-------------------------------------------------------------------------------------------\n");
+        sb.append("                                   CONSULTAS INTERATIVAS\n");
+        sb.append("---+---------------------------------------------------------------------------------------\n");
+        sb.append(" 1 | Códigos Produtos nunca comprados e total\n");
+        sb.append(" 2 | Total vendas e clientes distintos para cada filial e para um dado mês\n");
+        sb.append(" 3 | Número compras, produtos distintos e gasto total de um dado cliente para cada mês\n");
+        sb.append(" 4 | Número compras, clientes distintos e faturação total de um dado produto para cada mês\n");
+        sb.append(" 5 | Lista produtos que um cliente mais comprou(quantidade)\n");
+        sb.append(" 6 | X produtos mais vendidos em todo o ano(unidades) e clientes distintos que os compraram\n");
+        sb.append(" 7 | 3 maiores compradores em termos de faturação por filial\n");
+        sb.append(" 8 | X clientes que compraram mais produtos diferentes\n");
+        sb.append(" 9 | X clientes que mais compraram um produto e valor gasto para cada um\n");
+        sb.append("10 | Faturação total de cada produto mês a mês e filial a filial\n");
+        sb.append(" 0 | Voltar\n");
+        sb.append("---+----------------------------------------------------------------------------------------\n");
+        System.out.print(sb.toString());
     }
 
     public void menuConsultasEstatisticas(){
-        System.out.print("CONSULTAS ESTATÍSTICAS\n" +
-                "1 | Dados relativos ao último ficheiro de vendas lido\n" +
-                "2 | Total compras por mês\n" +
-                "3 | Facturação total e por (Filial/Mês)\n" +
-                "4 | Clientes compradores distintos por (Filial/Mês)\n" +
-                "0 | Sair\n");
+        StringBuilder sb = new StringBuilder();
+        sb.append("\n-----------------------------------------------------\n");
+        sb.append("               CONSULTAS ESTATÍSTICAS\n");
+        sb.append("-----------------------------------------------------\n");
+        sb.append("1 | Dados relativos ao último ficheiro de vendas lido\n");
+        sb.append("2 | Total compras por mês\n");
+        sb.append("3 | Facturação total e por (Filial/Mês)\n");
+        sb.append("4 | Clientes compradores distintos por (Filial/Mês)\n");
+        sb.append("0 | Voltar\n");
+        sb.append("-----------------------------------------------------\n");
+        System.out.print(sb.toString());
     }
-
-    private void printPagina(List<ParStringFloat> list, int page, int max, int maxpage) {
-        int i, j;
-        int size = list.size();
-
-        System.out.println("---------------------------------------------------------------------------------------------");
-        System.out.println("                                       Página (" + (page+1) + "/" +(maxpage+1) +")");
-        System.out.println("---------------------------------------------------------------------------------------------");
-
-        for(i=max*page; i<(max*(page+1)) && i<size; i+=6) {
-            for(j=i; (j<i+5) && (j<size-1); j++)
-                System.out.print(list.get(j).toString() + "  |  ");
-            System.out.println(list.get(j).toString());
-        }
-
-        System.out.println("---------------------------------------------------------------------------------------------");
-        System.out.println("      [N] Next Page | [P] Previous Page | [F] First Page | [L] Last Page | [Q] Quit        ");
-        System.out.println("---------------------------------------------------------------------------------------------");
-    }
-
-    private void printArray(List<ParStringFloat> list, int max) {
-        int page = 0, maxpage = (list.size()-1)/max;
-        Scanner s = new Scanner(System.in);
-        String line;
-        boolean r=true;
-
-        while(r) {
-            printPagina(list, page, max, maxpage);
-
-            line = s.nextLine();
-
-            if(line.equals("N") && page<maxpage)
-                page++;
-
-            else if(line.equals("P") && page>0)
-                page--;
-
-            else if(line.equals("F"))
-                page = 0;
-
-            else if(line.equals("L"))
-                page = maxpage;
-
-            else if(line.equals("Q"))
-                r=false;
-        }
-    }
-
 
     public void printMessage(String message) {
         System.out.println(message);
@@ -163,17 +130,20 @@
 
         switch (i) {
             case 1:
-                sb.append("Informações sobre ficheiro de vendas lido\n");
-                sb.append("Ficheiro vendas lido:").append(ce.getSalesPath());
-                sb.append("\nVendas Inválidas:").append(ce.getVendasInvalidas());
-                sb.append("\nTotal produtos:").append(ce.getTotalProdutos());
-                sb.append("\nNúmero prodtutos comprados:").append(ce.getProdsComprados());
-                sb.append("\nNúmero prodtutos nunca Comprados:").append(ce.getProdsNaoComprados());
-                sb.append("\nTotal clientes:").append(ce.getTotalClientes());
-                sb.append("\nNúmero clientes compradores:").append(ce.getCliCompradores());
-                sb.append("\nNúmero clientes não compradores:").append(ce.getCliNaoCompradores());
-                sb.append("\nCompras com valor 0:").append(ce.getComprasValor0());
-                sb.append("\nFacturação total:").append(ce.getFatTotal());
+                sb.append("-------------------------------------------------------\n");
+                sb.append("       Informações sobre ficheiro de vendas lido \n");
+                sb.append("----------------------------------+--------------------\n");
+                sb.append(" Ficheiro vendas lido             | ").append(ce.getSalesPath()).append("\n");
+                sb.append(" Vendas Inválidas                 | ").append(ce.getVendasInvalidas()).append("\n");
+                sb.append(" Total produtos                   | ").append(ce.getTotalProdutos()).append("\n");
+                sb.append(" Número prodtutos comprados       | ").append(ce.getProdsComprados()).append("\n");
+                sb.append(" Número prodtutos nunca Comprados | ").append(ce.getProdsNaoComprados()).append("\n");
+                sb.append(" Total clientes                   | ").append(ce.getTotalClientes()).append("\n");
+                sb.append(" Número clientes compradores      | ").append(ce.getCliCompradores()).append("\n");
+                sb.append(" Número clientes não compradores  | ").append(ce.getCliNaoCompradores()).append("\n");
+                sb.append(" Compras com valor 0              | ").append(ce.getComprasValor0()).append("\n");
+                sb.append(" Facturação total                 | ").append(ce.getFatTotal()).append("\n");
+                sb.append("----------------------------------+--------------------\n");
                 System.out.println(sb.toString());
                 break;
             case 2:
@@ -213,7 +183,7 @@
 
     public void printQ1(List<String> list) {
         System.out.println("Produtos não comprados:\n");
-        printStringList(list);
+        //printStringList(list);
     }
 
     public void printQ2(int [] array) {
@@ -278,9 +248,11 @@
 
     public void printConsultasIterativas(ConsultasInterativas ci, int i,String time) {
         final StringBuilder sb = new StringBuilder("ConsultasEstatisticas\n");
+        Tabela t = new Tabela();
 
         switch (i) {
             case 1:
+                t.printArray(ci.getQ1());
                 printQ1(ci.getQ1());
                 break;
             case 2:
@@ -293,19 +265,19 @@
                 printQ4(ci.getQ4());
                 break;
             case 5:
-                printArray(ci.getQ5(), 100);
+                t.printArray(ci.getQ5());
                 break;
             case 6:
-                printArray(ci.getQ6(), 100);
+                t.printArray(ci.getQ6());
                 break;
             case 7:
                 printQ7(ci.getQ7());
                 break;
             case 8:
-                printArray(ci.getQ8(), 100);
+                t.printArray(ci.getQ8());
                 break;
             case 9:
-                printArray(ci.getQ9(), 100);
+                t.printArray(ci.getQ9());
                 break;
             case 10:
                 printQ10(ci.getQ10());
@@ -314,46 +286,4 @@
 
         printTime(time, "Querie " + i);
     }
-
-    /*
-    public void printQ1(ConsultasInterativas ci, String time) {
-        System.out.println(ci.toStringQ1()+"\nTempo querie 1:" + time);
-    }
-
-    public void printQ2(ConsultasInterativas ci, String time, int num) {
-        System.out.println(ci.toStringQ2(num)+"\nTempo querie 2:" + time);
-    }
-
-    public void printQ3(ConsultasInterativas ci, String time) {
-        System.out.println(ci.toStringQ3()+"\nTempo querie 3:" + time);
-    }
-
-    public void printQ4(ConsultasInterativas ci, String time) {
-        System.out.println(ci.toStringQ4()+"\nTempo querie 4:" + time);
-    }
-
-    public void printQ5(ConsultasInterativas ci, String time) {
-        System.out.println(ci.toStringQ5()+"\nTempo querie 5:" + time);
-    }
-
-    public void printQ6(ConsultasInterativas ci, String time, int num) {
-        System.out.println(ci.toStringQ6(num)+"\nTempo querie 6:" + time);
-    }
-
-    public void printQ7(ConsultasInterativas ci, String time) {
-        System.out.println(ci.toStringQ7()+"\nTempo querie 7:" + time);
-    }
-
-    public void printQ8(ConsultasInterativas ci, String time, int num) {
-        System.out.println(ci.toStringQ8(num)+"\nTempo querie 8:" + time);
-    }
-
-    public void printQ9(ConsultasInterativas ci, String time, int num, String line) {
-        System.out.println(ci.toStringQ9(num, line)+"\nTempo querie 9:" + time);
-    }
-
-    public void printQ10(ConsultasInterativas ci, String time) {
-        System.out.println(ci.toStringQ10()+"\nTempo querie 10:" + time);
-    }
-*/
 }
Index: src/Tabela.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.List;\nimport java.util.Scanner;\n\npublic class Tabela {\n    private void printPagina1(List<ParStringFloat> list, int page, int max, int maxpage) {\n        int i, j;\n        int size = list.size();\n\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n        System.out.println(\"                                       Página \" + (page+1) + maxpage+1);\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n\n        for(i=max*page; i<(max*(page+1)) && i<size; i+=6) {\n            for(j=i; (j<i+5) && (j<size-1); j++)\n                System.out.print(list.get(j).toString());\n            System.out.println(list.get(j).toString());\n        }\n\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n        System.out.println(\"      [N] Next Page | [P] Previous Page | [F] First Page | [L] Last Page | [Q] Quit        \");\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n    }\n/*\n    private void printPagina2(List<ParStringFloat> list, int page, int max, int maxpage) {\n        int i, j;\n        int size = list.size();\n\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n        System.out.println(\"                                       Página \" + (page+1) + maxpage+1);\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n\n        for(i=max*page; i<(max*(page+1)) && i<size; i+=6) {\n            for(j=i; (j<i+5) && (j<size-1); j++)\n                System.out.print(list.get(j).toString2());\n            System.out.println(list.get(j).toString2());\n        }\n\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n        System.out.println(\"      [N] Next Page | [P] Previous Page | [F] First Page | [L] Last Page | [Q] Quit        \");\n        System.out.println(\"---------------------------------------------------------------------------------------------\");\n    }\n\n    private void printArray(List<ParStringFloat> list, int max, int type) {\n        int page = 0, maxpage = (list.size()-1)/max;\n        Scanner s = new Scanner(System.in);\n        String line;\n        boolean r=true;\n\n        while(r) {\n            if(type==1)\n                printPagina1(list, page, max, maxpage);\n            else\n                printPagina2(list, page, max, maxpage);\n\n            line = s.nextLine();\n\n            if(line.equals(\"N\") && page<maxpage)\n                page++;\n\n            else if(line.equals(\"P\") && page>0)\n                page--;\n\n            else if(line.equals(\"F\"))\n                page = 0;\n\n            else if(line.equals(\"L\"))\n                page = maxpage;\n\n            else if(line.equals(\"Q\"))\n                r=false;\n        }\n    }*/\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Tabela.java	(revision de534e2107c77dd862c1a16dc2ae515f1396b30e)
+++ src/Tabela.java	(date 1589984373018)
@@ -2,72 +2,51 @@
 import java.util.Scanner;
 
 public class Tabela {
-    private void printPagina1(List<ParStringFloat> list, int page, int max, int maxpage) {
+    private void printPagina(List<String> list, int page, int max, int maxpage) {
         int i, j;
         int size = list.size();
 
         System.out.println("---------------------------------------------------------------------------------------------");
-        System.out.println("                                       Página " + (page+1) + maxpage+1);
+        System.out.println("                                       Página (" + (page+1) + "/" +(maxpage+1) +")");
         System.out.println("---------------------------------------------------------------------------------------------");
 
         for(i=max*page; i<(max*(page+1)) && i<size; i+=6) {
             for(j=i; (j<i+5) && (j<size-1); j++)
-                System.out.print(list.get(j).toString());
-            System.out.println(list.get(j).toString());
+                System.out.print(list.get(j) + "  |  ");
+            System.out.println(list.get(j));
         }
 
         System.out.println("---------------------------------------------------------------------------------------------");
         System.out.println("      [N] Next Page | [P] Previous Page | [F] First Page | [L] Last Page | [Q] Quit        ");
         System.out.println("---------------------------------------------------------------------------------------------");
     }
-/*
-    private void printPagina2(List<ParStringFloat> list, int page, int max, int maxpage) {
-        int i, j;
-        int size = list.size();
-
-        System.out.println("---------------------------------------------------------------------------------------------");
-        System.out.println("                                       Página " + (page+1) + maxpage+1);
-        System.out.println("---------------------------------------------------------------------------------------------");
 
-        for(i=max*page; i<(max*(page+1)) && i<size; i+=6) {
-            for(j=i; (j<i+5) && (j<size-1); j++)
-                System.out.print(list.get(j).toString2());
-            System.out.println(list.get(j).toString2());
-        }
-
-        System.out.println("---------------------------------------------------------------------------------------------");
-        System.out.println("      [N] Next Page | [P] Previous Page | [F] First Page | [L] Last Page | [Q] Quit        ");
-        System.out.println("---------------------------------------------------------------------------------------------");
-    }
-
-    private void printArray(List<ParStringFloat> list, int max, int type) {
+    public void printArray(List<String> list) {
+        int max = 100;
         int page = 0, maxpage = (list.size()-1)/max;
         Scanner s = new Scanner(System.in);
         String line;
         boolean r=true;
 
         while(r) {
-            if(type==1)
-                printPagina1(list, page, max, maxpage);
-            else
-                printPagina2(list, page, max, maxpage);
+            printPagina(list, page, max, maxpage);
 
             line = s.nextLine();
 
-            if(line.equals("N") && page<maxpage)
+            if((line.equals("N") || line.equals("n")) && page<maxpage)
                 page++;
 
-            else if(line.equals("P") && page>0)
+            else if((line.equals("P") || line.equals("p")) && page>0)
                 page--;
 
-            else if(line.equals("F"))
+            else if((line.equals("F") || line.equals("f")))
                 page = 0;
 
-            else if(line.equals("L"))
+            else if((line.equals("L") || line.equals("l")))
                 page = maxpage;
 
-            else if(line.equals("Q"))
+            else if((line.equals("Q") || line.equals("q")))
                 r=false;
         }
-    }*/
+    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"BranchesTreeState\">\n    <expand>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n    </expand>\n    <select />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"a7d9a260-62ee-47be-913f-994f23ac6e51\" name=\"Default Changelist\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/Apresentacao.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/Apresentacao.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/ConsultasEstatisticas.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/ConsultasEstatisticas.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/ConsultasInterativas.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/ConsultasInterativas.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/Filial.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/Filial.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/GestVendas.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/GestVendas.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/GestaoFiliais.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/GestaoFiliais.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/IApresentacao.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/IApresentacao.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/IConsultasEstatisticas.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/IConsultasEstatisticas.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/IGestVendas.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/IGestVendas.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/Interpretador.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/Interpretador.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/ParStringFloat.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/ParStringFloat.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/projJava/Tabela.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/projJava/Tabela.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Apresentacao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Apresentacao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/ConsultasEstatisticas.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ConsultasEstatisticas.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/ConsultasInterativas.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ConsultasInterativas.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Filial.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Filial.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/GestVendas.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/GestVendas.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/GestaoFiliais.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/GestaoFiliais.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/IApresentacao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/IApresentacao.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/IConsultasEstatisticas.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/IConsultasEstatisticas.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/IGestVendas.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/IGestVendas.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Interpretador.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Interpretador.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/ParStringFloat.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ParStringFloat.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Tabela.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Tabela.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n        <option value=\"Interface\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/../..\" />\n  </component>\n  <component name=\"ProjectId\" id=\"1c8Fj2TQojo9nh2mxu8jen24GJk\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <OptionsSetting value=\"false\" id=\"Update\" />\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.keymap\" />\n  </component>\n  <component name=\"Push.Settings\">\n    <option name=\"SHOW_DETAILS_PANEL\" value=\"false\" />\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"projJava\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SvnConfiguration\">\n    <configuration />\n  </component>\n  <component name=\"TaskManager\">\n    <task id=\"LOCAL-00001\" summary=\"melhoramento interpretador e encapsulamento\">\n      <created>1589755181422</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1589755181422</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"melhoramento interpretador e encapsulamento\">\n      <created>1589755321878</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1589755321878</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"melhoramento interpretador e encapsulamento\">\n      <created>1589755499813</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1589755499813</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"melhoramento interpretador e encapsulamento\">\n      <created>1589755872494</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1589755872494</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"5\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"2\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"melhoramento interpretador e encapsulamento\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"melhoramento interpretador e encapsulamento\" />\n  </component>\n  <component name=\"WindowStateProjectService\">\n    <state x=\"863\" y=\"421\" width=\"251\" height=\"263\" key=\"#Notifications\" timestamp=\"1589755395318\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state x=\"863\" y=\"421\" width=\"251\" height=\"263\" key=\"#Notifications/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1589755395318\" />\n    <state x=\"171\" y=\"138\" key=\"#com.intellij.ide.util.MemberChooser\" timestamp=\"1589759742959\">\n      <screen x=\"0\" y=\"23\" width=\"1440\" height=\"813\" />\n    </state>\n    <state x=\"171\" y=\"138\" key=\"#com.intellij.ide.util.MemberChooser/0.23.1440.813@0.23.1440.813\" timestamp=\"1589759742959\" />\n    <state x=\"523\" y=\"100\" width=\"931\" height=\"905\" key=\"CommitChangelistDialog2\" timestamp=\"1589755871866\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state x=\"523\" y=\"100\" width=\"931\" height=\"905\" key=\"CommitChangelistDialog2/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1589755871866\" />\n    <state x=\"242\" y=\"116\" width=\"1482\" height=\"872\" key=\"DiffContextDialog\" timestamp=\"1589755543660\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state x=\"242\" y=\"116\" width=\"1482\" height=\"872\" key=\"DiffContextDialog/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1589755543660\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1589950218229\">\n      <screen x=\"0\" y=\"23\" width=\"1440\" height=\"821\" />\n    </state>\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.bottom/0.23.1440.813@0.23.1440.813\" timestamp=\"1589766310790\" />\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.bottom/0.23.1440.814@0.23.1440.814\" timestamp=\"1589823818796\" />\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.bottom/0.23.1440.816@0.23.1440.816\" timestamp=\"1589825521965\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.bottom/0.23.1440.821@0.23.1440.821\" timestamp=\"1589950218229\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.bottom/0.23.1440.822@0.23.1440.822\" timestamp=\"1589947465321\" />\n    <state width=\"1750\" height=\"282\" key=\"GridCell.Tab.0.bottom/0.23.1792.1033@0.23.1792.1033\" timestamp=\"1589909445544\" />\n    <state width=\"1807\" height=\"847\" key=\"GridCell.Tab.0.bottom/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1589754298386\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.center\" timestamp=\"1589950218228\">\n      <screen x=\"0\" y=\"23\" width=\"1440\" height=\"821\" />\n    </state>\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.center/0.23.1440.813@0.23.1440.813\" timestamp=\"1589766310789\" />\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.center/0.23.1440.814@0.23.1440.814\" timestamp=\"1589823818795\" />\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.center/0.23.1440.816@0.23.1440.816\" timestamp=\"1589825521964\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.center/0.23.1440.821@0.23.1440.821\" timestamp=\"1589950218228\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.center/0.23.1440.822@0.23.1440.822\" timestamp=\"1589947465320\" />\n    <state width=\"1750\" height=\"282\" key=\"GridCell.Tab.0.center/0.23.1792.1033@0.23.1792.1033\" timestamp=\"1589909445543\" />\n    <state width=\"1807\" height=\"847\" key=\"GridCell.Tab.0.center/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1589754298386\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.left\" timestamp=\"1589950218227\">\n      <screen x=\"0\" y=\"23\" width=\"1440\" height=\"821\" />\n    </state>\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.left/0.23.1440.813@0.23.1440.813\" timestamp=\"1589766310789\" />\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.left/0.23.1440.814@0.23.1440.814\" timestamp=\"1589823818795\" />\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.left/0.23.1440.816@0.23.1440.816\" timestamp=\"1589825521964\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.left/0.23.1440.821@0.23.1440.821\" timestamp=\"1589950218227\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.left/0.23.1440.822@0.23.1440.822\" timestamp=\"1589947465320\" />\n    <state width=\"1750\" height=\"282\" key=\"GridCell.Tab.0.left/0.23.1792.1033@0.23.1792.1033\" timestamp=\"1589909445543\" />\n    <state width=\"1807\" height=\"847\" key=\"GridCell.Tab.0.left/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1589754298385\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.right\" timestamp=\"1589950218228\">\n      <screen x=\"0\" y=\"23\" width=\"1440\" height=\"821\" />\n    </state>\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.right/0.23.1440.813@0.23.1440.813\" timestamp=\"1589766310789\" />\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.right/0.23.1440.814@0.23.1440.814\" timestamp=\"1589823818796\" />\n    <state width=\"1398\" height=\"642\" key=\"GridCell.Tab.0.right/0.23.1440.816@0.23.1440.816\" timestamp=\"1589825521964\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.right/0.23.1440.821@0.23.1440.821\" timestamp=\"1589950218228\" />\n    <state width=\"1398\" height=\"641\" key=\"GridCell.Tab.0.right/0.23.1440.822@0.23.1440.822\" timestamp=\"1589947465320\" />\n    <state width=\"1750\" height=\"282\" key=\"GridCell.Tab.0.right/0.23.1792.1033@0.23.1792.1033\" timestamp=\"1589909445543\" />\n    <state width=\"1807\" height=\"847\" key=\"GridCell.Tab.0.right/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1589754298386\" />\n    <state x=\"145\" y=\"79\" key=\"MergeDialog\" timestamp=\"1589936243590\">\n      <screen x=\"0\" y=\"23\" width=\"1440\" height=\"823\" />\n    </state>\n    <state x=\"145\" y=\"79\" key=\"MergeDialog/0.23.1440.823@0.23.1440.823\" timestamp=\"1589936243590\" />\n    <state x=\"221\" y=\"58\" key=\"SettingsEditor\" timestamp=\"1589760877445\">\n      <screen x=\"0\" y=\"23\" width=\"1440\" height=\"813\" />\n    </state>\n    <state x=\"221\" y=\"58\" key=\"SettingsEditor/0.23.1440.813@0.23.1440.813\" timestamp=\"1589760877445\" />\n    <state x=\"588\" y=\"288\" width=\"800\" height=\"528\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1589755875751\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state x=\"588\" y=\"288\" width=\"800\" height=\"528\" key=\"Vcs.Push.Dialog.v2/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1589755875751\" />\n    <state x=\"764\" y=\"467\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1589755483482\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state x=\"764\" y=\"467\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1589755483482\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision de534e2107c77dd862c1a16dc2ae515f1396b30e)
+++ .idea/workspace.xml	(date 1589985527384)
@@ -22,28 +22,12 @@
     <list default="true" id="a7d9a260-62ee-47be-913f-994f23ac6e51" name="Default Changelist" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/projJava/Apresentacao.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/Apresentacao.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/projJava/ConsultasEstatisticas.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/ConsultasEstatisticas.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/projJava/ConsultasInterativas.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/ConsultasInterativas.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/projJava/Filial.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/Filial.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/projJava/GestVendas.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/GestVendas.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/projJava/GestaoFiliais.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/GestaoFiliais.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/projJava/IApresentacao.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/IApresentacao.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/projJava/IConsultasEstatisticas.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/IConsultasEstatisticas.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/projJava/IGestVendas.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/IGestVendas.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/projJava/Interpretador.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/Interpretador.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/projJava/ParStringFloat.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/ParStringFloat.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/projJava/IConsultasInterarivas.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/IConsultasInterarivas.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/projJava/Tabela.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/projJava/Tabela.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Apresentacao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Apresentacao.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ConsultasEstatisticas.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ConsultasEstatisticas.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/ConsultasInterativas.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ConsultasInterativas.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Filial.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Filial.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/GestVendas.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GestVendas.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/GestaoFiliais.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GestaoFiliais.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/IApresentacao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/IApresentacao.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/IConsultasEstatisticas.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/IConsultasEstatisticas.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/IGestVendas.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/IGestVendas.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Interpretador.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Interpretador.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ParStringFloat.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ParStringFloat.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/IConsultasInterarivas.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/IConsultasInterarivas.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Tabela.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Tabela.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -77,6 +61,7 @@
     <property name="node.js.path.for.package.tslint" value="project" />
     <property name="node.js.selected.package.eslint" value="(autodetect)" />
     <property name="node.js.selected.package.tslint" value="(autodetect)" />
+    <property name="restartRequiresConfirmation" value="false" />
     <property name="settings.editor.selected.configurable" value="preferences.keymap" />
   </component>
   <component name="Push.Settings">
@@ -167,45 +152,45 @@
       <screen x="67" y="27" width="1853" height="1053" />
     </state>
     <state x="242" y="116" width="1482" height="872" key="DiffContextDialog/67.27.1853.1053@67.27.1853.1053" timestamp="1589755543660" />
-    <state width="1398" height="641" key="GridCell.Tab.0.bottom" timestamp="1589950218229">
-      <screen x="0" y="23" width="1440" height="821" />
+    <state width="1750" height="540" key="GridCell.Tab.0.bottom" timestamp="1589985501440">
+      <screen x="0" y="23" width="1792" height="1033" />
     </state>
     <state width="1398" height="642" key="GridCell.Tab.0.bottom/0.23.1440.813@0.23.1440.813" timestamp="1589766310790" />
     <state width="1398" height="642" key="GridCell.Tab.0.bottom/0.23.1440.814@0.23.1440.814" timestamp="1589823818796" />
     <state width="1398" height="642" key="GridCell.Tab.0.bottom/0.23.1440.816@0.23.1440.816" timestamp="1589825521965" />
     <state width="1398" height="641" key="GridCell.Tab.0.bottom/0.23.1440.821@0.23.1440.821" timestamp="1589950218229" />
     <state width="1398" height="641" key="GridCell.Tab.0.bottom/0.23.1440.822@0.23.1440.822" timestamp="1589947465321" />
-    <state width="1750" height="282" key="GridCell.Tab.0.bottom/0.23.1792.1033@0.23.1792.1033" timestamp="1589909445544" />
+    <state width="1750" height="540" key="GridCell.Tab.0.bottom/0.23.1792.1033@0.23.1792.1033" timestamp="1589985501440" />
     <state width="1807" height="847" key="GridCell.Tab.0.bottom/67.27.1853.1053@67.27.1853.1053" timestamp="1589754298386" />
-    <state width="1398" height="641" key="GridCell.Tab.0.center" timestamp="1589950218228">
-      <screen x="0" y="23" width="1440" height="821" />
+    <state width="1750" height="540" key="GridCell.Tab.0.center" timestamp="1589985501440">
+      <screen x="0" y="23" width="1792" height="1033" />
     </state>
     <state width="1398" height="642" key="GridCell.Tab.0.center/0.23.1440.813@0.23.1440.813" timestamp="1589766310789" />
     <state width="1398" height="642" key="GridCell.Tab.0.center/0.23.1440.814@0.23.1440.814" timestamp="1589823818795" />
     <state width="1398" height="642" key="GridCell.Tab.0.center/0.23.1440.816@0.23.1440.816" timestamp="1589825521964" />
     <state width="1398" height="641" key="GridCell.Tab.0.center/0.23.1440.821@0.23.1440.821" timestamp="1589950218228" />
     <state width="1398" height="641" key="GridCell.Tab.0.center/0.23.1440.822@0.23.1440.822" timestamp="1589947465320" />
-    <state width="1750" height="282" key="GridCell.Tab.0.center/0.23.1792.1033@0.23.1792.1033" timestamp="1589909445543" />
+    <state width="1750" height="540" key="GridCell.Tab.0.center/0.23.1792.1033@0.23.1792.1033" timestamp="1589985501440" />
     <state width="1807" height="847" key="GridCell.Tab.0.center/67.27.1853.1053@67.27.1853.1053" timestamp="1589754298386" />
-    <state width="1398" height="641" key="GridCell.Tab.0.left" timestamp="1589950218227">
-      <screen x="0" y="23" width="1440" height="821" />
+    <state width="1750" height="540" key="GridCell.Tab.0.left" timestamp="1589985501439">
+      <screen x="0" y="23" width="1792" height="1033" />
     </state>
     <state width="1398" height="642" key="GridCell.Tab.0.left/0.23.1440.813@0.23.1440.813" timestamp="1589766310789" />
     <state width="1398" height="642" key="GridCell.Tab.0.left/0.23.1440.814@0.23.1440.814" timestamp="1589823818795" />
     <state width="1398" height="642" key="GridCell.Tab.0.left/0.23.1440.816@0.23.1440.816" timestamp="1589825521964" />
     <state width="1398" height="641" key="GridCell.Tab.0.left/0.23.1440.821@0.23.1440.821" timestamp="1589950218227" />
     <state width="1398" height="641" key="GridCell.Tab.0.left/0.23.1440.822@0.23.1440.822" timestamp="1589947465320" />
-    <state width="1750" height="282" key="GridCell.Tab.0.left/0.23.1792.1033@0.23.1792.1033" timestamp="1589909445543" />
+    <state width="1750" height="540" key="GridCell.Tab.0.left/0.23.1792.1033@0.23.1792.1033" timestamp="1589985501439" />
     <state width="1807" height="847" key="GridCell.Tab.0.left/67.27.1853.1053@67.27.1853.1053" timestamp="1589754298385" />
-    <state width="1398" height="641" key="GridCell.Tab.0.right" timestamp="1589950218228">
-      <screen x="0" y="23" width="1440" height="821" />
+    <state width="1750" height="540" key="GridCell.Tab.0.right" timestamp="1589985501440">
+      <screen x="0" y="23" width="1792" height="1033" />
     </state>
     <state width="1398" height="642" key="GridCell.Tab.0.right/0.23.1440.813@0.23.1440.813" timestamp="1589766310789" />
     <state width="1398" height="642" key="GridCell.Tab.0.right/0.23.1440.814@0.23.1440.814" timestamp="1589823818796" />
     <state width="1398" height="642" key="GridCell.Tab.0.right/0.23.1440.816@0.23.1440.816" timestamp="1589825521964" />
     <state width="1398" height="641" key="GridCell.Tab.0.right/0.23.1440.821@0.23.1440.821" timestamp="1589950218228" />
     <state width="1398" height="641" key="GridCell.Tab.0.right/0.23.1440.822@0.23.1440.822" timestamp="1589947465320" />
-    <state width="1750" height="282" key="GridCell.Tab.0.right/0.23.1792.1033@0.23.1792.1033" timestamp="1589909445543" />
+    <state width="1750" height="540" key="GridCell.Tab.0.right/0.23.1792.1033@0.23.1792.1033" timestamp="1589985501440" />
     <state width="1807" height="847" key="GridCell.Tab.0.right/67.27.1853.1053@67.27.1853.1053" timestamp="1589754298386" />
     <state x="145" y="79" key="MergeDialog" timestamp="1589936243590">
       <screen x="0" y="23" width="1440" height="823" />
Index: src/ConsultasInterativas.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\nimport java.util.stream.Collectors;\n\npublic class ConsultasInterativas implements IConsultasInterarivas{\n    private List<String> querie1;\n    private int[] querie2;\n    private Map<Integer,float[]> querie3;\n    private Map<Integer,float[]> querie4;\n    private List<ParStringFloat> querie5;\n    private List<ParStringFloat> querie6;\n    private Map<Integer, List<String>> querie7;\n    private List<ParStringFloat> querie8;\n    private List<ParStringFloat> querie9;\n    private Map<String, float[][]> querie10;\n\n    public List<String> getQ1(){\n        return new ArrayList<>(querie1);\n    }\n\n    public int[] getQ2(){\n        int[] copy;\n        copy = Arrays.copyOf(querie2,8);\n        return copy;\n    }\n\n    public Map<Integer,float[]> getQ3(){\n        Map<Integer,float[]> q3copy = new HashMap<>();\n        for(int i = 0;i < 12;i++) {\n            q3copy.put(i,querie3.get(i).clone());\n        }\n        return q3copy;\n    }\n\n    public Map<Integer,float[]> getQ4(){\n        Map<Integer,float[]> q4copy = new HashMap<>();\n        for(int i = 0;i < 12;i++) {\n            q4copy.put(i,querie4.get(i).clone());\n        }\n        return q4copy;\n    }\n\n    public List<ParStringFloat> getQ5(){\n        List<ParStringFloat> q5copy = new ArrayList<>();\n        querie5.forEach(p -> q5copy.add(p.clone()));\n\n        return q5copy;\n    }\n\n    public List<ParStringFloat> getQ6(){\n        List<ParStringFloat> q6copy = new ArrayList<>();\n        querie6.forEach(p -> q6copy.add(p.clone()));\n\n        return q6copy;\n    }\n\n    public Map<Integer,List<String>> getQ7(){\n        Map<Integer,List<String>> q7copy = new HashMap<>();\n        for(int i = 0;i < 3;i++)\n            q7copy.put(i,new ArrayList<String>(querie7.get(i)));\n\n        return q7copy;\n    }\n\n    public List<ParStringFloat> getQ8(){\n        List<ParStringFloat> q8copy = new ArrayList<>();\n        querie8.forEach(p -> q8copy.add(p.clone()));\n\n        return q8copy;\n    }\n\n    public List<ParStringFloat> getQ9(){\n        List<ParStringFloat> q9copy = new ArrayList<>();\n        querie9.forEach(p -> q9copy.add(p.clone()));\n\n        return q9copy;\n    }\n\n    public Map<String,float[][]> getQ10(){\n        return new HashMap<>(querie10);\n    }\n\n    public void setQuerie1(GestVendas sgv){\n        querie1 = new ArrayList<>();\n\n        sgv.getCatPtree().stream().filter(cod -> !(sgv.getFactContainsProd(cod))).forEach(s -> querie1.add(s));\n    }\n\n    public void setQuerie1teste(GestVendas sgv){\n        querie1 = new ArrayList<>();\n\n        sgv.getCatPtree().stream().filter(cod -> !(sgv.getFactContainsProd(cod))).forEach(s -> querie1.add(s));\n    }\n\n    public String toStringQ1(){\n        return querie1.toString() + \"\\nTotal produtos nunca comprados:\" + querie1.size();\n    }\n\n    public void setQuerie2(GestVendas sgv,int month){\n        querie2 = new int[8];\n        int i = 0;\n        querie2[i++] = sgv.getGFilVendasMes(month);\n        querie2[i++] = sgv.getGFilClientesDiferentesMes(month);\n        for(int f = 0;f < 3;f++) {\n            querie2[i++] = sgv.getFilialVendas(f);\n            querie2[i++] = sgv.getFilialClientesCompradores(f);\n        }\n    }\n\n    public String toStringQ2(int month){\n        int i = 0;\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Total do vendas no mês \").append(month).append(\":\").append(querie2[i++]).\n                append(\"\\nTotal de compras de clientes diferentes no mês \").append(month).append(\":\").append(querie2[i++]);\n        for(int fil = 1;fil < 4;fil++)\n            sb.append(\"\\nTotal de vendas na filial \").append(fil).append(\":\").append(querie2[i++])\n              .append(\"\\nTotal de compras de clientes diferentes na filial \").append(fil).append(\":\").append(querie2[i++]);\n\n        return sb.toString();\n    }\n\n    public void setQuerie3(GestVendas sgv,String cod){\n        querie3 = new HashMap<>();\n        float[] res;\n        int index,pos;\n        for(int month = 0;month < 12;month++){\n            res = new float[3];\n            res[0] = sgv.getGFilNumeroComprasMes(cod, month);\n            res[1] = sgv.getGFilProdutosDiferentes(cod, month);\n            res[2] = sgv.getGFilGastoTotalMes(cod, month);\n            querie3.put(month,res);\n        }\n    }\n\n    public String toStringQ3(){\n        float [] res;\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Mês (Compras) (Produtos Diferentes) (Gasto total)\\n\");\n        for(int mes = 0;mes < 12;mes++) {\n            res = querie3.get(mes);\n            sb.append(mes+1).append(\"    \").append(res[0]).append(\"           \").append(res[1]).append(\"             \").append(res[2]).append(\"\\n\");\n        }\n\n        return sb.toString();\n    }\n\n    public void setQuerie4(GestVendas sgv,String cod){\n        querie4 = new HashMap<>();\n        float res[];\n        for(int month = 0;month < 12;month++){\n            res = new float[3];\n            res[0] = sgv.getFactUniMes(cod,month);\n            res[1] = sgv.getGFilClientesDiferentes(cod, month);\n            res[2] = sgv.getFactTotalMes(cod,month);\n            querie4.put(month,res);\n        }\n    }\n\n    public String toStringQ4(){\n        float [] res;\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Mês (Vendas uni) (Clientes Diferentes) (Faturação)\\n\");\n        for(int mes = 0;mes < 12;mes++) {\n            res = querie4.get(mes);\n            sb.append(mes+1).append(\"      \").append(res[0]).append(\"           \").append(res[1]).append(\"            \").append(res[2]).append(\"\\n\");\n        }\n\n        return sb.toString();\n    }\n/*\n    public void addQuerie5(String cod, int uni) {\n        ParStringFloat c = new ParStringFloat(cod, uni);\n\n        if(querie5.contains(c)){\n            Iterator<ParStringFloat> it = querie5.iterator();\n            boolean b = true;\n            ParStringFloat q;\n            while (it.hasNext() && b){\n                q = it.next();\n                if(q.getCode().equals(cod)) {\n                    q.addUni(uni);\n                    b = false;\n                }\n            }\n        }\n        else\n            querie5.add(c);\n    }\n*/\n    public void setQuerie5(GestVendas sgv, String cod) {\n        querie5 = new ArrayList<>();\n        int i;\n\n        for(i=0; i<3; i++)\n            sgv.getGFilCliSet(i, cod).forEach(c -> querie5.add(c));\n\n        querie5 = querie5.stream().sorted(new sortParbyValue()).collect(Collectors.toList());\n    }\n\n    public String toStringQ5(){\n        return \"Produtos que o cliente mais comprou:\\n\" + querie5.toString();\n    }\n\n    public void setQuerie6(GestVendas sgv, int limit) {\n        querie6 = new ArrayList<>();\n\n        for(String cod:sgv.getFactKeys())\n            querie6.add(new ParStringFloat(cod, sgv.getFactUni(cod),0));\n\n        querie6 = querie6.stream().sorted(new sortParbyValue()).limit(limit).collect(Collectors.toList());\n\n        querie6.forEach(q -> q.setValue2(sgv.getGFilClientesDiferentesTotal(q.getCode())));\n    }\n\n    public String toStringQ6(int limit){\n        return limit + \" produtos mais vendidos em todo o ano:\\n\" + querie6.toString();\n    }\n\n    public void setQuerie7(GestVendas sgv) {\n        querie7 = new HashMap<>();\n\n        for(int i = 0; i<3; i++)\n            querie7.put(i, sgv.getFilialClientesMaisCompradores(i));\n    }\n\n    public String toStringQ7(){\n        return \"3 Clientes mais compradores por filial:\\n\" + querie7.toString();\n    }\n\n    public void setQuerie8(GestVendas sgv, int limit) {\n        querie8 = new ArrayList<>();\n\n        sgv.getCatCtree().forEach(a -> querie8.add(new ParStringFloat(a, sgv.getGFilProdutosDiferentesTotal(a))));\n\n        querie8 = querie8.stream().sorted(new sortParbyValue()).limit(limit).collect(Collectors.toList());\n    }\n\n    public String toStringQ8(int limit){\n        return limit + \" Clientes que compraram mais produtos diferentes:\\n\" + querie8.toString();\n    }\n\n    public void setQuerie9(GestVendas sgv, String codProd,int limit) {\n        querie9 = new ArrayList<>();\n  /*      List<ProdCliinfo> list;\n\n        for(int i=0; i<3; i++) {\n            list = sgv.getGFilProdCliList(i, codProd);\n            for (ProdCliinfo pcli : list){\n                ParStringFloat q9 = new ParStringFloat(pcli.getCod(),pcli.getUni(),pcli.getPrice()*pcli.getUni());\n                if(querie9.contains(q9)){\n                    Iterator<ParStringFloat> it = querie9.iterator();\n                    boolean b = true;\n                    ParStringFloat q;\n                    while (it.hasNext() && b){\n                        q = it.next();\n                        if(q.getCode().equals(q9.getCode())) {\n                            q.addUni(q9.getValue(),q9.getValue2());\n                            b = false;\n                        }\n                    }\n                }\n                else\n                    querie9.add(q9);\n            }\n        }*/\n        for(int i=0; i<3; i++)\n            querie9.addAll(sgv.getGFilProdSet(i, codProd));\n\n        querie9 = querie9.stream().sorted(new sortParbyValue()).limit(limit).collect(Collectors.toList());\n    }\n\n    public String toStringQ9(int limit,String code){\n        StringBuilder sb = new StringBuilder();\n        sb.append(limit).append(\" Clientes que mais compraram o produto com o código \").append(code).append(\"\\n\");\n        querie9.forEach(par -> sb.append(par.toString()));\n\n        return sb.toString();\n    }\n\n    public void setQuerie10(GestVendas sgv) {\n        querie10 = new HashMap<>();\n\n        for(String cod: sgv.getCatPtree()){\n            if(sgv.getFactContainsProd(cod))\n                querie10.put(cod, sgv.getFactMesFilProd(cod));\n\n            else\n                querie10.put(cod, null);\n        }\n    }\n\n    public String toStringTabela(float[][] values){\n        StringBuilder sb = new StringBuilder();\n        for(int fil = 0;fil < 3;fil++) {\n            for (int i = 0; i < 12; i++)\n                sb.append(values[i][fil]).append(\" \");\n            sb.append(\"\\n\");\n        }\n\n        return sb.toString();\n    }\n\n    public String toStringQ10(){\n        int size = querie10.size();\n        StringBuilder sb = new StringBuilder();\n        for(Map.Entry<String, float[][]> cod:querie10.entrySet()) {\n            sb.append(\"Faturação \").append(cod.getKey()).append(\"\\n\");\n\n            if (cod.getValue() != null)\n                sb.append(toStringTabela(cod.getValue()));\n\n            else\n                sb.append(\"Produto não vendido\\n\");\n        }\n\n        return sb.toString();\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/ConsultasInterativas.java	(revision de534e2107c77dd862c1a16dc2ae515f1396b30e)
+++ src/ConsultasInterativas.java	(date 1589982313088)
@@ -13,6 +13,8 @@
     private List<ParStringFloat> querie9;
     private Map<String, float[][]> querie10;
 
+    //--------------------------------------------------------------Getters--------------------------------------------------------------------------\\
+
     public List<String> getQ1(){
         return new ArrayList<>(querie1);
     }
@@ -39,16 +41,16 @@
         return q4copy;
     }
 
-    public List<ParStringFloat> getQ5(){
-        List<ParStringFloat> q5copy = new ArrayList<>();
-        querie5.forEach(p -> q5copy.add(p.clone()));
+    public List<String> getQ5(){
+        List<String> q5copy = new ArrayList<>();
+        querie5.forEach(p -> q5copy.add(p.toString()));
 
         return q5copy;
     }
 
-    public List<ParStringFloat> getQ6(){
-        List<ParStringFloat> q6copy = new ArrayList<>();
-        querie6.forEach(p -> q6copy.add(p.clone()));
+    public List<String> getQ6(){
+        List<String> q6copy = new ArrayList<>();
+        querie6.forEach(p -> q6copy.add(p.toString()));
 
         return q6copy;
     }
@@ -61,16 +63,16 @@
         return q7copy;
     }
 
-    public List<ParStringFloat> getQ8(){
-        List<ParStringFloat> q8copy = new ArrayList<>();
-        querie8.forEach(p -> q8copy.add(p.clone()));
+    public List<String> getQ8(){
+        List<String> q8copy = new ArrayList<>();
+        querie8.forEach(p -> q8copy.add(p.toString()));
 
         return q8copy;
     }
 
-    public List<ParStringFloat> getQ9(){
-        List<ParStringFloat> q9copy = new ArrayList<>();
-        querie9.forEach(p -> q9copy.add(p.clone()));
+    public List<String> getQ9(){
+        List<String> q9copy = new ArrayList<>();
+        querie9.forEach(p -> q9copy.add(p.toString()));
 
         return q9copy;
     }
@@ -79,22 +81,15 @@
         return new HashMap<>(querie10);
     }
 
+    //--------------------------------------------------------------Setters--------------------------------------------------------------------------\\
+
+
     public void setQuerie1(GestVendas sgv){
         querie1 = new ArrayList<>();
 
         sgv.getCatPtree().stream().filter(cod -> !(sgv.getFactContainsProd(cod))).forEach(s -> querie1.add(s));
     }
 
-    public void setQuerie1teste(GestVendas sgv){
-        querie1 = new ArrayList<>();
-
-        sgv.getCatPtree().stream().filter(cod -> !(sgv.getFactContainsProd(cod))).forEach(s -> querie1.add(s));
-    }
-
-    public String toStringQ1(){
-        return querie1.toString() + "\nTotal produtos nunca comprados:" + querie1.size();
-    }
-
     public void setQuerie2(GestVendas sgv,int month){
         querie2 = new int[8];
         int i = 0;
@@ -106,18 +101,6 @@
         }
     }
 
-    public String toStringQ2(int month){
-        int i = 0;
-        StringBuilder sb = new StringBuilder();
-        sb.append("Total do vendas no mês ").append(month).append(":").append(querie2[i++]).
-                append("\nTotal de compras de clientes diferentes no mês ").append(month).append(":").append(querie2[i++]);
-        for(int fil = 1;fil < 4;fil++)
-            sb.append("\nTotal de vendas na filial ").append(fil).append(":").append(querie2[i++])
-              .append("\nTotal de compras de clientes diferentes na filial ").append(fil).append(":").append(querie2[i++]);
-
-        return sb.toString();
-    }
-
     public void setQuerie3(GestVendas sgv,String cod){
         querie3 = new HashMap<>();
         float[] res;
@@ -131,18 +114,6 @@
         }
     }
 
-    public String toStringQ3(){
-        float [] res;
-        StringBuilder sb = new StringBuilder();
-        sb.append("Mês (Compras) (Produtos Diferentes) (Gasto total)\n");
-        for(int mes = 0;mes < 12;mes++) {
-            res = querie3.get(mes);
-            sb.append(mes+1).append("    ").append(res[0]).append("           ").append(res[1]).append("             ").append(res[2]).append("\n");
-        }
-
-        return sb.toString();
-    }
-
     public void setQuerie4(GestVendas sgv,String cod){
         querie4 = new HashMap<>();
         float res[];
@@ -155,37 +126,6 @@
         }
     }
 
-    public String toStringQ4(){
-        float [] res;
-        StringBuilder sb = new StringBuilder();
-        sb.append("Mês (Vendas uni) (Clientes Diferentes) (Faturação)\n");
-        for(int mes = 0;mes < 12;mes++) {
-            res = querie4.get(mes);
-            sb.append(mes+1).append("      ").append(res[0]).append("           ").append(res[1]).append("            ").append(res[2]).append("\n");
-        }
-
-        return sb.toString();
-    }
-/*
-    public void addQuerie5(String cod, int uni) {
-        ParStringFloat c = new ParStringFloat(cod, uni);
-
-        if(querie5.contains(c)){
-            Iterator<ParStringFloat> it = querie5.iterator();
-            boolean b = true;
-            ParStringFloat q;
-            while (it.hasNext() && b){
-                q = it.next();
-                if(q.getCode().equals(cod)) {
-                    q.addUni(uni);
-                    b = false;
-                }
-            }
-        }
-        else
-            querie5.add(c);
-    }
-*/
     public void setQuerie5(GestVendas sgv, String cod) {
         querie5 = new ArrayList<>();
         int i;
@@ -196,10 +136,6 @@
         querie5 = querie5.stream().sorted(new sortParbyValue()).collect(Collectors.toList());
     }
 
-    public String toStringQ5(){
-        return "Produtos que o cliente mais comprou:\n" + querie5.toString();
-    }
-
     public void setQuerie6(GestVendas sgv, int limit) {
         querie6 = new ArrayList<>();
 
@@ -211,10 +147,6 @@
         querie6.forEach(q -> q.setValue2(sgv.getGFilClientesDiferentesTotal(q.getCode())));
     }
 
-    public String toStringQ6(int limit){
-        return limit + " produtos mais vendidos em todo o ano:\n" + querie6.toString();
-    }
-
     public void setQuerie7(GestVendas sgv) {
         querie7 = new HashMap<>();
 
@@ -222,10 +154,6 @@
             querie7.put(i, sgv.getFilialClientesMaisCompradores(i));
     }
 
-    public String toStringQ7(){
-        return "3 Clientes mais compradores por filial:\n" + querie7.toString();
-    }
-
     public void setQuerie8(GestVendas sgv, int limit) {
         querie8 = new ArrayList<>();
 
@@ -234,48 +162,15 @@
         querie8 = querie8.stream().sorted(new sortParbyValue()).limit(limit).collect(Collectors.toList());
     }
 
-    public String toStringQ8(int limit){
-        return limit + " Clientes que compraram mais produtos diferentes:\n" + querie8.toString();
-    }
-
     public void setQuerie9(GestVendas sgv, String codProd,int limit) {
         querie9 = new ArrayList<>();
-  /*      List<ProdCliinfo> list;
 
-        for(int i=0; i<3; i++) {
-            list = sgv.getGFilProdCliList(i, codProd);
-            for (ProdCliinfo pcli : list){
-                ParStringFloat q9 = new ParStringFloat(pcli.getCod(),pcli.getUni(),pcli.getPrice()*pcli.getUni());
-                if(querie9.contains(q9)){
-                    Iterator<ParStringFloat> it = querie9.iterator();
-                    boolean b = true;
-                    ParStringFloat q;
-                    while (it.hasNext() && b){
-                        q = it.next();
-                        if(q.getCode().equals(q9.getCode())) {
-                            q.addUni(q9.getValue(),q9.getValue2());
-                            b = false;
-                        }
-                    }
-                }
-                else
-                    querie9.add(q9);
-            }
-        }*/
         for(int i=0; i<3; i++)
             querie9.addAll(sgv.getGFilProdSet(i, codProd));
 
         querie9 = querie9.stream().sorted(new sortParbyValue()).limit(limit).collect(Collectors.toList());
     }
 
-    public String toStringQ9(int limit,String code){
-        StringBuilder sb = new StringBuilder();
-        sb.append(limit).append(" Clientes que mais compraram o produto com o código ").append(code).append("\n");
-        querie9.forEach(par -> sb.append(par.toString()));
-
-        return sb.toString();
-    }
-
     public void setQuerie10(GestVendas sgv) {
         querie10 = new HashMap<>();
 
@@ -288,6 +183,72 @@
         }
     }
 
+    //--------------------------------------------------------------toString--------------------------------------------------------------------------\\
+
+    public String toStringQ1(){
+        return querie1.toString() + "\nTotal produtos nunca comprados:" + querie1.size();
+    }
+
+    public String toStringQ2(int month){
+        int i = 0;
+        StringBuilder sb = new StringBuilder();
+        sb.append("Total do vendas no mês ").append(month).append(":").append(querie2[i++]).
+                append("\nTotal de compras de clientes diferentes no mês ").append(month).append(":").append(querie2[i++]);
+        for(int fil = 1;fil < 4;fil++)
+            sb.append("\nTotal de vendas na filial ").append(fil).append(":").append(querie2[i++])
+                    .append("\nTotal de compras de clientes diferentes na filial ").append(fil).append(":").append(querie2[i++]);
+
+        return sb.toString();
+    }
+
+    public String toStringQ3(){
+        float [] res;
+        StringBuilder sb = new StringBuilder();
+        sb.append("Mês (Compras) (Produtos Diferentes) (Gasto total)\n");
+        for(int mes = 0;mes < 12;mes++) {
+            res = querie3.get(mes);
+            sb.append(mes+1).append("    ").append(res[0]).append("           ").append(res[1]).append("             ").append(res[2]).append("\n");
+        }
+
+        return sb.toString();
+    }
+
+    public String toStringQ4(){
+        float [] res;
+        StringBuilder sb = new StringBuilder();
+        sb.append("Mês (Vendas uni) (Clientes Diferentes) (Faturação)\n");
+        for(int mes = 0;mes < 12;mes++) {
+            res = querie4.get(mes);
+            sb.append(mes+1).append("      ").append(res[0]).append("           ").append(res[1]).append("            ").append(res[2]).append("\n");
+        }
+
+        return sb.toString();
+    }
+
+    public String toStringQ5(){
+        return "Produtos que o cliente mais comprou:\n" + querie5.toString();
+    }
+
+    public String toStringQ6(int limit){
+        return limit + " produtos mais vendidos em todo o ano:\n" + querie6.toString();
+    }
+
+    public String toStringQ7(){
+        return "3 Clientes mais compradores por filial:\n" + querie7.toString();
+    }
+
+    public String toStringQ8(int limit){
+        return limit + " Clientes que compraram mais produtos diferentes:\n" + querie8.toString();
+    }
+
+    public String toStringQ9(int limit,String code){
+        StringBuilder sb = new StringBuilder();
+        sb.append(limit).append(" Clientes que mais compraram o produto com o código ").append(code).append("\n");
+        querie9.forEach(par -> sb.append(par.toString()));
+
+        return sb.toString();
+    }
+
     public String toStringTabela(float[][] values){
         StringBuilder sb = new StringBuilder();
         for(int fil = 0;fil < 3;fil++) {
@@ -314,6 +275,7 @@
 
         return sb.toString();
     }
+
 }
 
 
Index: src/IConsultasInterarivas.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.List;\nimport java.util.Map;\n\npublic interface IConsultasInterarivas {\n    public List<String> getQ1();\n    public int[] getQ2();\n    public Map<Integer,float[]> getQ3();\n    public Map<Integer,float[]> getQ4();\n    public List<ParStringFloat> getQ5();\n    public List<ParStringFloat> getQ6();\n    public Map<Integer,List<String>> getQ7();\n    public List<ParStringFloat> getQ8();\n    public List<ParStringFloat> getQ9();\n    public Map<String,float[][]> getQ10();\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/IConsultasInterarivas.java	(revision de534e2107c77dd862c1a16dc2ae515f1396b30e)
+++ src/IConsultasInterarivas.java	(date 1589982313082)
@@ -6,10 +6,10 @@
     public int[] getQ2();
     public Map<Integer,float[]> getQ3();
     public Map<Integer,float[]> getQ4();
-    public List<ParStringFloat> getQ5();
-    public List<ParStringFloat> getQ6();
+    public List<String> getQ5();
+    public List<String> getQ6();
     public Map<Integer,List<String>> getQ7();
-    public List<ParStringFloat> getQ8();
-    public List<ParStringFloat> getQ9();
+    public List<String> getQ8();
+    public List<String> getQ9();
     public Map<String,float[][]> getQ10();
 }
